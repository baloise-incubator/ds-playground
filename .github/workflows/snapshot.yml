name: ðŸšš Snapshot

on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  CreateSnapshot:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/snapshot')
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/workflows/actions/setup

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/core

      # - name: Get current timestamp
      #   id: timestamp
      #   run: echo "timestamp=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      # - name: Truncate timestamp to 8 characters
      #   id: truncated_timestamp
      #   run: echo "${{ steps.timestamp.outputs.timestamp}}"

      - name: Get Last Commit SHA
        id: last-commit
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          COMMITS_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}}/commits"
          LAST_COMMIT_SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $COMMITS_URL | jq -r '.[-1].sha')
          echo "sha=$LAST_COMMIT_SHA" >> $GITHUB_OUTPUT

      - name: Truncate timestamp to 8 characters
        run: echo "${{ steps.last-commit.outputs.sha}}"

      - name: set version
        id: set-version
        run: echo "version=${{ steps.package-version.outputs.current-version}}-snapshot.${{ github.event.issue.number }}-${{github.event.pull_request.head.sha}}" >> $GITHUB_OUTPUT

      - name: Get Action URL
        id: action-url
        run: echo "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Echo version
        run: echo "${{steps.set-version.outputs.version}}"

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ github.event.comment.id }}
          edit-mode: replace
          body: |
            ## ðŸšš Snapshot

            `${{ steps.set-version.outputs.version }}` in progress...
            [Action](${{ steps.action-url.outputs.url }})

      # - uses: ./.github/workflows/actions/release-setup
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     npm-token: ${{ secrets.NPM_PUBLISH_TOKEN }}

      # - name: Define version
      #   run: npx nx release version --git-commit=false --git-tag=false --preid=snapshot --specifier=${{steps.set-version.outputs.version}}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build
      #   run: npx nx run-many -t build --projects=tag:scope:release

      # - name: Pre-Publish
      #   run: npx nx run pre-publish

      # - name: Publish
      #   run: npx nx release publish --tag=snapshot

      # - name: Create comment
      #   if: success()
      #   uses: peter-evans/create-or-update-comment@v4
      #   with:
      #     comment-id: ${{ github.event.comment.id }}
      #     edit-mode: replace
      #     body: |
      #       ## ðŸš€ Snapshot

      #       `${{ steps.set-version.outputs.version }}` is published!
      #       [Action](${{ steps.action-url.outputs.url }})

      # - name: Create comment
      #   if: failure()
      #   uses: peter-evans/create-or-update-comment@v4
      #   with:
      #     comment-id: ${{ github.event.comment.id }}
      #     edit-mode: replace
      #     body: |
      #       ## ðŸ’© Snapshot

      #       `${{ steps.set-version.outputs.version }}` has failed!
      #       [Action](${{ steps.action-url.outputs.url }})

      # - name: Git Reset
      #   run: git reset --hard
