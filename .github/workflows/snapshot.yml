name: ðŸšš Snapshot

on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  CreateSnapshot:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/snapshot')
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/workflows/actions/setup
      - uses: ./.github/workflows/actions/release-setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          npm-token: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/core

      - name: Get current timestamp
        id: timestamp
        run: echo "timestamp=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Truncate timestamp to 8 characters
        id: truncated_timestamp
        run: echo "${{ steps.timestamp.outputs.timestamp}}"

      - name: set version
        id: set-version
        run: echo "version=${{ steps.package-version.outputs.current-version}}-snapshot.${{ github.event.issue.number }}-${{steps.timestamp.outputs.timestamp}}" >> $GITHUB_OUTPUT

      - name: Echo version
        run: echo "${{steps.set-version.outputs.version}}"

      - name: Define version
        run: npx nx release --git-commit=false --git-tag=false --preid=snapshot --specifier=${{steps.set-version.outputs.version}} --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build
      #   run: npx nx run-many -t build --projects=tag:scope:release

      # - name: Pre-Publish
      #   run: npx nx run pre-publish

      # - name: Publish
      #   run: npx nx release publish --tag=snapshot

      # - name: Git Reset
      #   run: git reset --hard
